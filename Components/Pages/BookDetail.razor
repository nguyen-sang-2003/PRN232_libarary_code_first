@page "/book/{id:int}"
@using LibararyWebApplication.DTO.Cuong
@inject HttpClient Http
@using Newtonsoft.Json
@rendermode InteractiveServer
@inject NavigationManager Navigation

<h3>Book Details</h3>

@if (book == null)
{
    <div class="d-flex justify-content-center my-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <div class="container my-5">
        <div class="card shadow border-0">
            <div class="row g-0 align-items-center">
                <div class="col-md-4 text-center p-4">
                    <img src="@book.ImageBase64"
                         class="img-fluid rounded shadow-sm"
                         alt="@book.Title"
                         style="max-height: 300px; object-fit: contain;" />
                </div>
                <div class="col-md-8">
                    <div class="card-body px-4">
                        <h3 class="card-title fw-bold text-danger">@book.Title</h3>
                        <p class="card-text fs-5 mb-1">
                            <strong>Author:</strong> @book.AuthorName
                        </p>
                        <p class="card-text fs-5 mb-1">
                            <strong>Published:</strong> @book.PublishedDate.ToShortDateString()
                        </p>
                        <p class="card-text fs-5 mb-1">
                            <strong>Total Copies:</strong> @book.TotalCopies
                        </p>
                        <p class="card-text fs-5 mb-3">
                            <strong>Available Copies:</strong> @book.AvailableCopies
                        </p>

                        <a class="btn btn-outline-primary btn-lg mt-2" href="/books">‚Üê Back to Books</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


@code {
    [Parameter]
    public int id { get; set; }

    private BookDto? book;


    protected override async Task OnInitializedAsync()
    {
        try
        {
            book = await Http.GetFromJsonAsync<BookDto>($"{Navigation.BaseUri}api/cuong/books/{id}");

        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Failed to load book detail: {ex.Message}");
        }
    }
}
