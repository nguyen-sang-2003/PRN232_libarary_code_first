@page
@model LibararyWebApplication.Pages.RuleManager.IndexModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Qu·∫£n l√Ω n·ªôi quy th∆∞ vi·ªán";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />

<div class="container mt-5">
    <div class="card shadow rounded-4">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h4 class="mb-0">üìö Qu·∫£n l√Ω n·ªôi quy th∆∞ vi·ªán</h4>
            <a asp-page="Create" class="btn btn-light btn-sm">‚ûï Th√™m n·ªôi quy</a>
        </div>

        <div class="card-body">
            <form method="get" class="mb-3 d-flex gap-2">
                <input name="SearchKeyword" value="@Model.SearchKeyword" class="form-control" placeholder="T√¨m theo ti√™u ƒë·ªÅ ho·∫∑c n·ªôi dung..." style="max-width: 400px;"/>
                <button type="submit" class="btn btn-outline-primary">T√¨m</button>
            </form>

            @if (Model.Rule != null && Model.Rule.Count > 0)
            {
                <div class="table-responsive">
                    <table class="table table-hover table-bordered align-middle">
                        <thead class="table-secondary text-center">
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.Rule[0].Title)</th>
                                <th style="width:600px">@Html.DisplayNameFor(model => model.Rule[0].Content)</th>
                                <th>@Html.DisplayNameFor(model => model.Rule[0].CreatedAt)</th>
                                <th>@Html.DisplayNameFor(model => model.Rule[0].UpdatedAt)</th>
                                <th>H√†nh ƒë·ªông</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Rule)
                            {
                                <tr>
                                    <td>@item.Title</td>
                                    <td>@(item.Content.Length > 100 ? item.Content.Substring(0, 100) + "..." : item.Content)</td>
                                    <td class="text-center">@item.CreatedAt.ToString("dd/MM/yyyy")</td>
                                    <td class="text-center">@item.UpdatedAt.ToString("dd/MM/yyyy")</td>
                                    <td class="text-center">
                                        <div class="d-flex justify-content-center gap-2">
                                            <a asp-page="./Edit" asp-route-id="@item.Id" class="btn btn-outline-warning btn-sm">‚úèÔ∏è</a>
                                            <a asp-page="./Details" asp-route-id="@item.Id" class="btn btn-outline-info btn-sm">üìÑ</a>
                                            <a asp-page="./Delete" asp-route-id="@item.Id" class="btn btn-outline-danger btn-sm">üóëÔ∏è</a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Ph√¢n trang -->
                <nav class="mt-4">
                    <ul class="pagination justify-content-center">
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                                <a class="page-link" asp-page="./Index" asp-route-PageIndex="@i" asp-route-SearchKeyword="@Model.SearchKeyword">@i</a>
                            </li>
                        }
                    </ul>
                </nav>
            }
            else
            {
                <div class="alert alert-info text-center">Kh√¥ng t√¨m th·∫•y n·ªôi quy n√†o ph√π h·ª£p.</div>
            }
        </div>
    </div>
</div>
